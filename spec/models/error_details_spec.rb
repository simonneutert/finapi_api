=begin
#finAPI RESTful Services (alpha build)

#finAPI RESTful Services (alpha build)

OpenAPI spec version: finAPI PSD2-alpha (based on v.1.73.0)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for FinapiApiClient::ErrorDetails
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ErrorDetails' do
  before do
    # run before each test
    @instance = FinapiApiClient::ErrorDetails.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ErrorDetails' do
    it 'should create an instance of ErrorDetails' do
      expect(@instance).to be_instance_of(FinapiApiClient::ErrorDetails)
    end
  end
  describe 'test attribute "message"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "code"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["MISSING_FIELD", "UNKNOWN_ENTITY", "METHOD_NOT_ALLOWED", "ENTITY_EXISTS", "ILLEGAL_ENTITY_STATE", "UNEXPECTED_ERROR", "ILLEGAL_FIELD_VALUE", "UNAUTHORIZED_ACCESS", "BAD_REQUEST", "UNSUPPORTED_ORDER", "ILLEGAL_PAGE_SIZE", "INVALID_FILTER_OPTIONS", "TOO_MANY_IDS", "BANK_SERVER_REJECTION", "IBAN_ONLY_MONEY_TRANSFER_NOT_SUPPORTED", "IBAN_ONLY_DIRECT_DEBIT_NOT_SUPPORTED", "COLLECTIVE_MONEY_TRANSFER_NOT_SUPPORTED", "INVALID_TWO_STEP_PROCEDURE", "MISSING_TWO_STEP_PROCEDURE", "UNSUPPORTED_MEDIA_TYPE", "UNSUPPORTED_BANK", "USER_NOT_VERIFIED", "USER_ALREADY_VERIFIED", "INVALID_TOKEN", "LOCKED", "NO_ACCOUNTS_FOR_TYPE_LIST", "FORBIDDEN", "NO_EXISTING_CHALLENGE", "ADDITIONAL_AUTHENTICATION_REQUIRED", "WEB_FORM_REQUIRED", "WEB_FORM_ABORTED"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.code = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["BUSINESS", "TECHNICAL"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "multi_step_authentication"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
