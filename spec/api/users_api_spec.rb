=begin
#finAPI RESTful Services (alpha build)

#finAPI RESTful Services (alpha build)

OpenAPI spec version: finAPI PSD2-alpha (based on v.1.73.0)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'spec_helper'
require 'json'

# Unit tests for FinapiApi::UsersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @instance = FinapiApi::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@instance).to be_instance_of(FinapiApi::UsersApi)
    end
  end

  # unit tests for create_user
  # Create a new user
  # &lt;p&gt;Create a new user. Must pass your global (i.e. client) access_token. &lt;/p&gt;&lt;p&gt;This service returns the user&#39;s password as plain text. &lt;/p&gt;&lt;p&gt;The automatic update of the user&#39;s bank connections is disabled by default for any new user. User identifiers are regarded case-insensitive by finAPI.&lt;/p&gt;&lt;p&gt;Please note that finAPI generally has a restricted set of allowed characters for input fields. You can find the allowed characters &lt;a href &#x3D; \&quot;https://finapi.zendesk.com/hc/en-us/articles/222013148-What-symbols-are-allowed-in-finAPI-\&quot;&gt;here&lt;/a&gt;. If a field does not explicitly specify a set of allowed characters, then these are the characters that are allowed for the field. Some fields may specify a different set of characters, in which case this will be documented for the field (like for the &#39;id&#39; field in this service).&lt;/p&gt;
  # @param body User&#39;s details
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_authorized_user
  # Delete the authorized user
  # Delete the authorized user. Must pass the user&#39;s access_token. ATTENTION: This deletes the user including all of his bank connections, accounts, balance data and transactions! THIS PROCESS CANNOT BE UNDONE! Note that a user cannot get deleted while any of his bank connections are currently busy (in the process of import, update, or transactions categorization). &lt;p&gt;Note: finAPI will send a notification about the deletion of the user to each of your clients that has a user synchronization callback URL set in its configuration. This also includes the client that is performing this request.&lt;/p&gt;
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_authorized_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_unverified_user
  # Delete an unverified user
  # Delete an unverified user. Must pass your global (i.e. client) access_token.&lt;br/&gt;&lt;br/&gt;Notes:&lt;br/&gt;&amp;bull; Unverified users can only exist if the field &#39;isUserAutoVerificationEnabled&#39; (see Client Configuration Resource) is set to &#39;false&#39; (or had been false at some point in the past).&lt;br/&gt;&amp;bull; finAPI will send a notification about the deletion of the user to each of your clients that has a user synchronization callback URL set in its configuration. This also includes the client that is performing this request.&lt;br/&gt;&amp;bull; finAPI regards user identifiers case-insensitive.
  # @param user_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_unverified_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_authorized_user
  # Edit the authorized user
  # Edit the authorized user&#39;s data and settings. Must pass the user&#39;s access_token. Pass an empty string (but not null) to unset either the email or phone number. At least one field must have a non-null value in the request body. This service returns the user&#39;s password as &#39;XXXXX&#39;.
  # @param body User&#39;s details
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'edit_authorized_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for execute_password_change
  # Execute password change
  # Change the password of a user. Must pass your global (i.e. client) access_token.&lt;br/&gt;&lt;br/&gt;Note: When changing the password of a user, all tokens that have been handed out for that user (for whatever client) will be revoked! Also note that finAPI regards user identifiers case-insensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [ExecutePasswordChangeParams] :body 
  # @return [nil]
  describe 'execute_password_change test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_authorized_user
  # Get the authorized user
  # Get the authorized user&#39;s data. Must pass the user&#39;s access_token. Only the authorized user can get his data, i.e. his access_token must be used. This service returns the user&#39;s password as &#39;XXXXX&#39;.
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'get_authorized_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_verification_status
  # Get a user&#39;s verification status
  # Get the verification status of the requested user. Must pass your global (i.e. client) access_token. Note that finAPI regards user identifiers case-insensitive.
  # @param user_id User&#39;s identifier
  # @param [Hash] opts the optional parameters
  # @return [VerificationStatusResource]
  describe 'get_verification_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_password_change
  # Request password change
  # Request password change for a user. Must pass your global (i.e. client) access_token. Note that finAPI regards user identifiers case-insensitive.
  # @param [Hash] opts the optional parameters
  # @option opts [RequestPasswordChangeParams] :body 
  # @return [PasswordChangingResource]
  describe 'request_password_change test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_user
  # Verify a user
  # Verify a user. User verification is only required when your client does not have auto-verification enabled (see field &#39;isUserAutoVerificationEnabled&#39; in Client Configuration Resource). Must pass your global (i.e. client) access_token. Note that finAPI regards user identifiers case-insensitive.
  # @param user_id User&#39;s identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'verify_user test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
