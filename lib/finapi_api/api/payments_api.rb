=begin
#finAPI RESTful Services (alpha build)

#finAPI RESTful Services (alpha build)

OpenAPI spec version: finAPI PSD2-alpha (based on v.1.73.0)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'uri'

module FinapiApi
  class PaymentsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get payments
    # Get payments of the user that is authorized by the access_token. <p>Note: For requesting / executing payments, please refer to the 'Accounts' section of the API.</p>
    # @param [Hash] opts the optional parameters
    # @option opts [Array<Integer>] :ids A comma-separated list of payment identifiers. If specified, then only payments whose identifier is matching any of the given identifiers will be regarded. The maximum number of identifiers is 1000.
    # @option opts [Array<Integer>] :account_ids A comma-separated list of account identifiers. If specified, then only payments that relate to the given account(s) will be regarded. The maximum number of identifiers is 1000.
    # @option opts [Float] :min_amount If specified, then only those payments are regarded whose (absolute) total amount is equal or greater than the given amount will be regarded. The value must be a positive (absolute) amount.
    # @option opts [Float] :max_amount If specified, then only those payments are regarded whose (absolute) total amount is equal or less than the given amount will be regarded. Value must be a positive (absolute) amount.
    # @option opts [Integer] :page Result page that you want to retrieve (default to 1)
    # @option opts [Integer] :per_page Maximum number of records per page. Can be at most 500. NOTE: Due to its validation and visualization, the swagger frontend might show very low performance, or even crashes, when a service responds with a lot of data. It is recommended to use a HTTP client like Postman or DHC instead of our swagger frontend for service calls with large page sizes. (default to 20)
    # @option opts [Array<String>] :order Determines the order of the results. You can use the following fields for ordering the response: &#39;id&#39;, &#39;amount&#39;, &#39;requestDate&#39; and &#39;executionDate&#39;. The default order for all services is &#39;id,asc&#39;.
    # @return [PageablePaymentResources]
    def get_payments(opts = {})
      data, _status_code, _headers = get_payments_with_http_info(opts)
      data
    end

    # Get payments
    # Get payments of the user that is authorized by the access_token. &lt;p&gt;Note: For requesting / executing payments, please refer to the &#39;Accounts&#39; section of the API.&lt;/p&gt;
    # @param [Hash] opts the optional parameters
    # @option opts [Array<Integer>] :ids A comma-separated list of payment identifiers. If specified, then only payments whose identifier is matching any of the given identifiers will be regarded. The maximum number of identifiers is 1000.
    # @option opts [Array<Integer>] :account_ids A comma-separated list of account identifiers. If specified, then only payments that relate to the given account(s) will be regarded. The maximum number of identifiers is 1000.
    # @option opts [Float] :min_amount If specified, then only those payments are regarded whose (absolute) total amount is equal or greater than the given amount will be regarded. The value must be a positive (absolute) amount.
    # @option opts [Float] :max_amount If specified, then only those payments are regarded whose (absolute) total amount is equal or less than the given amount will be regarded. Value must be a positive (absolute) amount.
    # @option opts [Integer] :page Result page that you want to retrieve
    # @option opts [Integer] :per_page Maximum number of records per page. Can be at most 500. NOTE: Due to its validation and visualization, the swagger frontend might show very low performance, or even crashes, when a service responds with a lot of data. It is recommended to use a HTTP client like Postman or DHC instead of our swagger frontend for service calls with large page sizes.
    # @option opts [Array<String>] :order Determines the order of the results. You can use the following fields for ordering the response: &#39;id&#39;, &#39;amount&#39;, &#39;requestDate&#39; and &#39;executionDate&#39;. The default order for all services is &#39;id,asc&#39;.
    # @return [Array<(PageablePaymentResources, Fixnum, Hash)>] PageablePaymentResources data, response status code and response headers
    def get_payments_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PaymentsApi.get_payments ...'
      end
      if @api_client.config.client_side_validation && !opts[:'page'].nil? && opts[:'page'] < 1
        fail ArgumentError, 'invalid value for "opts[:"page"]" when calling PaymentsApi.get_payments, must be greater than or equal to 1.'
      end

      if @api_client.config.client_side_validation && !opts[:'per_page'].nil? && opts[:'per_page'] > 500
        fail ArgumentError, 'invalid value for "opts[:"per_page"]" when calling PaymentsApi.get_payments, must be smaller than or equal to 500.'
      end

      if @api_client.config.client_side_validation && !opts[:'per_page'].nil? && opts[:'per_page'] < 1
        fail ArgumentError, 'invalid value for "opts[:"per_page"]" when calling PaymentsApi.get_payments, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/api/v1/payments'

      # query parameters
      query_params = {}
      query_params[:'ids'] = @api_client.build_collection_param(opts[:'ids'], :multi) if !opts[:'ids'].nil?
      query_params[:'accountIds'] = @api_client.build_collection_param(opts[:'account_ids'], :multi) if !opts[:'account_ids'].nil?
      query_params[:'minAmount'] = opts[:'min_amount'] if !opts[:'min_amount'].nil?
      query_params[:'maxAmount'] = opts[:'max_amount'] if !opts[:'max_amount'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'perPage'] = opts[:'per_page'] if !opts[:'per_page'].nil?
      query_params[:'order'] = @api_client.build_collection_param(opts[:'order'], :multi) if !opts[:'order'].nil?

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['finapi_auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageablePaymentResources')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PaymentsApi#get_payments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
