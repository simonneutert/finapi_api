=begin
#finAPI RESTful Services (alpha build)

#finAPI RESTful Services (alpha build)

OpenAPI spec version: finAPI PSD2-alpha (based on v.1.73.0)

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.7

=end

require 'uri'

module FinapiApi
  class ClientConfigurationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Edit client configuration
    # Edit your client's configuration. Must pass your global (i.e. client) access_token.<br/><br/> <b>NOTE</b>: When token validity periods are changed, this only applies to newly requested tokens, and does not change the expiration time of already existing tokens.
    # @param [Hash] opts the optional parameters
    # @option opts [ClientConfigurationParams] :body Client configuration parameters
    # @return [ClientConfiguration]
    def edit_client_configuration(opts = {})
      data, _status_code, _headers = edit_client_configuration_with_http_info(opts)
      data
    end

    # Edit client configuration
    # Edit your client&#39;s configuration. Must pass your global (i.e. client) access_token.&lt;br/&gt;&lt;br/&gt; &lt;b&gt;NOTE&lt;/b&gt;: When token validity periods are changed, this only applies to newly requested tokens, and does not change the expiration time of already existing tokens.
    # @param [Hash] opts the optional parameters
    # @option opts [ClientConfigurationParams] :body Client configuration parameters
    # @return [Array<(ClientConfiguration, Fixnum, Hash)>] ClientConfiguration data, response status code and response headers
    def edit_client_configuration_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ClientConfigurationApi.edit_client_configuration ...'
      end
      # resource path
      local_var_path = '/api/v1/clientConfiguration'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(opts[:'body'])
      auth_names = ['finapi_auth']
      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ClientConfiguration')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ClientConfigurationApi#edit_client_configuration\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get client configuration
    # Get your client's configuration. Must pass your global (i.e. client) access_token.
    # @param [Hash] opts the optional parameters
    # @return [ClientConfiguration]
    def get_client_configuration(opts = {})
      data, _status_code, _headers = get_client_configuration_with_http_info(opts)
      data
    end

    # Get client configuration
    # Get your client&#39;s configuration. Must pass your global (i.e. client) access_token.
    # @param [Hash] opts the optional parameters
    # @return [Array<(ClientConfiguration, Fixnum, Hash)>] ClientConfiguration data, response status code and response headers
    def get_client_configuration_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ClientConfigurationApi.get_client_configuration ...'
      end
      # resource path
      local_var_path = '/api/v1/clientConfiguration'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['finapi_auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ClientConfiguration')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ClientConfigurationApi#get_client_configuration\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
